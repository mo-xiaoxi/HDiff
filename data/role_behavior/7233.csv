sentences
"Since there is no predefined limit to the length of a payload, recipients MUST anticipate potentially large decimal numerals and prevent parsing errors due to integer conversion overflows."
A client MAY generate range requests without having received this header field for the resource involved.
A server MAY ignore the Range header field.
A server MUST ignore a Range header field received with a request method other than GET.
An origin server MUST ignore a Range header field that contains a range unit it does not understand.
A proxy MAY discard a Range header field that contains a range unit it does not understand.
"A server that supports range requests MAY ignore or reject a Range header field that consists of more than two overlapping ranges, or a set of many small ranges that are not listed in ascending order, since both are indications of either a broken client or a deliberate denial-of-service attack (<a href=""#section-6.1"">Section 6.1</a>)."
A client SHOULD NOT request multiple ranges that are inherently less efficient to process and transfer than a single range that encompasses the same data.
A client that is requesting multiple ranges SHOULD list those ranges in ascending order (the order in which they would typically be received in a complete representation) unless there is a specific need to request a later part earlier.
"If all of the preconditions are true, the server supports the Range header field for the target resource, and the specified range(s) are valid and satisfiable (as defined in <a href=""#section-2.1"">Section 2.1</a>), the server SHOULD send a 206 (Partial Content) response with a payload containing one or more partial representations that correspond to the satisfiable ranges requested, as defined in <a href=""#section-4"">Section 4</a>."
"If all of the preconditions are true, the server supports the Range header field for the target resource, and the specified range(s) are invalid or unsatisfiable, the server SHOULD send a 416 (Range Not Satisfiable) response."
A client MUST NOT generate an If-Range header field in a request that does not contain a Range header field.
A server MUST ignore an If-Range header field received in a request that does not contain a Range header field.
An origin server MUST ignore an If-Range header field received in a request for a target resource that does not support Range requests.
A client MUST NOT generate an If-Range header field containing an entity-tag that is marked as weak.
"A client MUST NOT generate an If-Range header field containing an HTTP-date unless the client has no entity-tag for the corresponding representation and the date is a strong validator in the sense defined by <a href=""/doc/html/rfc7232#section-2.2.2"">Section&nbsp;2.2.2 of [RFC7232]</a>."
"A server that evaluates an If-Range precondition MUST use the strong comparison function when comparing entity-tags (<a href=""/doc/html/rfc7232#section-2.3.2"">Section&nbsp;2.3.2 of [RFC7232]</a>) and MUST evaluate the condition as false if an HTTP-date validator is provided that is not a strong validator in the sense defined by <a href=""/doc/html/rfc7232#section-2.2.2"">Section&nbsp;2.2.2 of [RFC7232]</a>."
"If the validator given in the If-Range header field matches the current validator for the selected representation of the target resource, then the server SHOULD process the Range header field as requested."
"If the validator does not match, the server MUST ignore the Range header field."
"When multiple ranges are requested, a server MAY coalesce any of the ranges that overlap, or that are separated by a gap that is smaller than the overhead of sending multiple parts, regardless of the order in which the corresponding byte-range-spec appeared in the received Range header field."
"A server MUST NOT generate a multipart response to a request for a single range, since a client that does not request multiple parts might not support multipart responses."
"However, a server MAY generate a multipart/byteranges payload with only a single body part if multiple ranges were requested and only one range was found to be satisfiable or only one range remained after coalescing."
A client that cannot process a multipart/byteranges response MUST NOT generate a request that asks for multiple ranges.
"When a multipart response payload is generated, the server SHOULD send the parts in the same order that the corresponding byte-range-spec appeared in the received Range header field, excluding those ranges that were deemed unsatisfiable or that were coalesced into other ranges."
"A client that receives a multipart response MUST inspect the Content-Range header field present in each body part in order to determine which range is contained in that body part; a client cannot rely on receiving the same ranges that it requested, nor the same order that it requested."
"When a 206 response is generated, the server MUST generate the following header fields, in addition to those required above, if the field would have been sent in a 200 (OK) response to the same request:"
"If a 206 is generated in response to a request with an If-Range header field, the sender SHOULD NOT generate other representation header fields beyond those required above, because the client is understood to already have a prior response containing those header fields."
"Otherwise, the sender MUST generate all of the representation header fields that would have been sent in a 200 (OK) response to the same request."
"For byte ranges, a sender SHOULD indicate the complete length of the representation from which the range has been extracted, unless the complete length is unknown or difficult to determine."
The recipient of an invalid Content-Range MUST NOT attempt to recombine the received content with a stored representation.
A client that has received multiple partial responses to GET requests on a target resource MAY combine those responses into a larger continuous range if they share the same strong validator.
"If all of the matching stored responses are 206 responses, then the stored response with the most recent header fields is used as the source of header fields for the combined response, except that the client MUST use other header fields provided in the new response, aside from Content-Range, to replace all instances of the corresponding header fields in the stored response."
"If the union consists of the entire range of the representation, then the client MUST process the combined response as if it were a complete 200 (OK) response, including a Content-Length header field that reflects the complete length."
"Otherwise, the client MUST process the set of continuous ranges as one of the following: an incomplete 200 (OK) response if the combined response is a prefix of the representation, a single 206 (Partial Content) response containing a multipart/byteranges body, or multiple 206 (Partial Content) responses, each with one continuous range that is indicated by a Content-Range header field."
"When this status code is generated in response to a byte-range request, the sender SHOULD generate a Content-Range header field specifying the current length of the selected representation (<a href=""#section-4.2"">Section 4.2</a>)."
